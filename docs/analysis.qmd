---
title: "How embryos acclimate to temperature through epigenetic regulation"
authors: 
  - "Thomas O’Leary, Emily Mikucki, Sumaetee Tangwancharoen, Sara Helms Cahan, Seth Frietze, Brent L. Lockwood"
format:
  html:
    theme: lumen
    fontsize: 95%
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
---

```{r setup}
#| include: false

# Set the default knitr options for the document
knitr::opts_chunk$set(
  echo = FALSE, 
  warning = FALSE, 
  message = FALSE
)

# Load packages
library(tidyverse)
library(kableExtra)
library(shiny)
```

::: {.callout-note collapse="true"}
## To do list

#### Major {-}

- Quality control: Should we be more aggressive removing multiplets? – see full question in multiplet section below.
- Reorganize script workflow
- Check low expression gene
- Knitr cache setup on this document

#### Minor {-}

- Shiny app minimal implementation
- Plotting themes and script and file standardization
:::


# **Code** {-}

::: {.panel-tabset}

## Phenotype

```{r pheno, filename = "cs_pheno.R"}
#| eval: false
#| cache: true
#| echo: true
#| code-fold: true
#| file: "../src/00_pheno/cs_pheno.R"
```

## Cell Ranger ARC

```{r mkref, filename = "00_mkref.sh"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/00_mkref.sh"
```

```{r count, filename = "01_count.sh"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/01_count.sh"
```

```{r aggr, filename = "02_aggr.sh"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/02_aggr.sh"
```

## Seurat

```{r create, filename = "00_create_seurat_object.R"}
#| eval: false
#| cache: true
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/00_create_seurat_object.R"
```

```{r qc-filt, filename = "01_quality_control_filtering.R"}
#| eval: false
#| dependson: create
#| cache: true
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/01_quality_control_filtering.R"
```

```{r init-clust, filename = "02_initial_cluster.R"}
#| dependson: qc-filt
#| cache: true
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/02_initial_cluster.R"
```

```{r amulet, filename = "03_amulet.R"}
#| dependson: create
#| cache: true
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/03_amulet.R"
```

```{r doublet-finder, filename = "04_doublet_finder.R"}
#| dependson: init-clust
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/04_doublet_finder.R"
```

```{r rm-mult, filename = "05_rm_multiplets.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/05_rm_multiplets.R"
```

```{r qc-cells, filename = "06_qc_data_cells.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/06_qc_data_cells.R"
```

```{r clust, filename = "07_cluster.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/07_cluster.R"
```

```{r markers, filename = "08_cluster_markers.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/08_cluster_markers.R"
```

```{r annot, filename = "09_cluster_annotation.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/09_cluster_annotation.R"
```

```{r link, filename = "10_link_peaks.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/10_link_peaks.R"
```

```{r pseudo, filename = "11_pseudobulk_DESeq2.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/11_pseudobulk_DESeq2.R"
```

## Figures

```{r fig-pheno, filename = "pheno.R"}
#| eval: false
#| dependson: pheno
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/pheno.R"
```

```{r fig-qc, filename = "qc.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/qc.R"
```

```{r fig-qc_cells, filename = "qc_cells.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/qc_cells.R"
```

```{r fig-mult, filename = "multiplets.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/multiplets.R"
```

```{r fig-clust, filename = "cluster.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/cluster.R"
```

:::

::: {.callout-note}
The code used for analysis is located [on GitHub](https://github.com/tsoleary/heater)
:::


# **Overview**

## Experimental design

```{r acc-exp-design}
knitr::include_graphics(
  here::here("output/figs/exp/acc_design.png")
)
```

```{r hs-exp-design}
knitr::include_graphics(
  here::here("output/figs/exp/heatshock_design.png")
)
```

## Phenotype

```{r pheno-fig}
knitr::include_graphics(
  here::here("output/figs/pheno/cantonS_survival.png")
)
```

# **Quality control**

::: {.callout-caution collapse=true, icon=false}
## Criteria for filtering all barcodes to high-quality nuclei

1. We used Cell Ranger ARC called cell barcodes -- algorithm described [here](https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/pipelines/latest/algorithms/cell-calling). 14,301 barcodes out of 2,215,183. 

2. Because the Cell Ranger ARC cell calling algorithm is very permissive to barcodes with very low counts (_i.e._, a minimum of a single count in each library), barcodes were additionally filtered to a low count threshold in both the ATAC and RNA libraries based on the clearly defined population of cells in the RNA and ATAC count scatterplot. Additionally, barcodes with more than 5% of RNA reads mapping to genes on the mitochondrial genome were excluded. A total of 886 barcodes were filtered out for 13,145 left. 

3. Multiplets were filtered out using two independent methods, relying on either the ATAC or RNA libraries to call multiplets. [AMULET](https://github.com/UcarLab/AMULET) relies on the assumption that in snATAC-seq of diploids there should be at most two overlapping fragments with the same cell barcode. The presence of more than two overlapping fragments is a potential indication of a multiplet. Doublets were also identified using the RNA-seq libraries with [DoubletFinder](https://github.com/chris-mcginnis-ucsf/DoubletFinder). After removing the 1,103 multiplet barcodes, there were still two barcodes that had substantially higher number of RNA reads after all filtering (i.e., n_Count_RNA around 12-13k when the next highest are around 6-7k). So I removed those two for a final number of 12,040 high quality nuceli barcodes.
:::


## Knee plot

```{r knee}
#| label: fig-plot
#| fig-cap: "Knee plot of the number of ATAC reads and RNA reads in the raw data."

knitr::include_graphics(here::here("output/figs/qc/knee_plots.png"))
```

## Scatter plot of counts

::: {.panel-tabset}

### Cells after all filtering

```{r fig-all-scatter}
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_final_filter.png")
)
```

### Cell Ranger ARC only

```{r fig-10x-scatter}
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_10x_cells.png")
)
```

### And low count threshold

```{r fig-low-scatter}
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_cells_threshold.png")
)
```

:::

## Violin QC plots

::: {.panel-tabset}

### After filtering

```{r qc-violin-post}
knitr::include_graphics(
  here::here("output/figs/qc/violin_qc_metrics_post_filter.png")
)
```

### Before filtering

```{r qc-violin-pre}
knitr::include_graphics(here::here("output/figs/qc/violin_qc_metrics.png"))
```

:::

## Multiplets

::: {.callout-warning collapse="true"}
## A question about detecting multiplets

After intial multiplet calling, some researchers seem to subcluster cells and then remove entire subclusters that have higher than a certain threshold of called doublets – even if the many of the individual barcodes themselves weren't called a multiplet in the initial multiplet classification. For example, the Calderon paper did the following:

> Unfortunately, this process alone did not remove all putative doublets that may have  been lost among different clusters of cells. Therefore, following clustering of the global dataset,  we individually processed each cluster identified and sub-clustered the data. We then eliminated  subclusters that were at least 15% classified as doublets. Following removal of all the initial nuclei  identified  as  doublets  and  subclusters  with  a  large  proportion  of  doublets,  we  reprocessed  the  global dataset.

Is this an approach we should consider with our data?
:::

::: {.panel-tabset}

### Mapped onto UMAP projection

```{r mult-umap}
knitr::include_graphics(here::here("output/figs/qc/multiplet_umap.png"))
```

### Counts

```{r counts-umap}
knitr::include_graphics(here::here("output/figs/qc/counts_umap.png"))
```

:::

### Count histograms {-}

::: {.panel-tabset}

#### Multiplets

```{r mult-hist}
knitr::include_graphics(here::here("output/figs/qc/multiplets_hist.png"))
```

#### After filtering

```{r sing-hist}
knitr::include_graphics(here::here("output/figs/qc/singlets_only_hist.png"))
```
:::

## QC metrics per sample

::: {.panel-tabset}

### Number of cells

```{r cells-samp}
knitr::include_graphics(here::here("output/figs/qc/cells_sample.png"))
```

### ATAC counts

```{r med-atac-samp}
knitr::include_graphics(here::here("output/figs/qc/median_atac_sample.png"))
```

### RNA counts

```{r med-rna-samp}
knitr::include_graphics(here::here("output/figs/qc/median_rna_sample.png"))
```

### TSS Enrichment

```{r med-tss-samp}
knitr::include_graphics(here::here("output/figs/qc/tss_enrichment_samples.png"))
```

### FRiP

```{r med-frip-samp}
knitr::include_graphics(here::here("output/figs/qc/frip_samples.png"))
```


### FRiT

```{r med-frit-samp}
knitr::include_graphics(here::here("output/figs/qc/frit_samples.png"))
```

:::

## QC metrics on UMAP

::: {.panel-tabset}

### ATAC counts

```{r umap-atac-count}
knitr::include_graphics(here::here("output/figs/features/qc/nCount_ATAC.png"))
```

### RNA counts

```{r umap-rna-count}
knitr::include_graphics(here::here("output/figs/features/qc/nCount_RNA.png"))
```

### TSS enrichment

```{r umap-tss}
knitr::include_graphics(here::here("output/figs/features/qc/TSS.enrichment.png"))
```

### Mito percent

```{r umap-mito}
knitr::include_graphics(here::here("output/figs/features/qc/percent.mt.png"))
```

### FRiP

```{r umap-frip}
knitr::include_graphics(here::here("output/figs/features/qc/FRiP.png"))
```

### FRiT

```{r umap-frit}
knitr::include_graphics(here::here("output/figs/features/qc/FRiT.png"))
```

:::


# **Seurat**

::: {.panel-tabset}

## Initial data processing

```{r clust-code, echo = c(13:25, 46:51, 66:96)}
#| eval: false
#| file: "../src/03_seurat/07_cluster.R"
```

## Notes

::: {.callout-note}
## Number of included dimensions

I kept the first 50 PCs. The elbow plot does not seem to entirely tail off before 50 PCs and the SCTransform method is a more robust normalization method that is less likely to carry artifacts do to technical variation. Please see [here](https://satijalab.org/seurat/archive/v3.0/sctransform_vignette.html) and [here](https://www.biostars.org/p/423306/).

The first LSI component is removed from downstream analysis because it is highly correlated with ATAC library depth. See below
:::

### PC elbow plot {-}

```{r elbow}
knitr::include_graphics(
  here::here("output/figs/qc/elbow_plot.png")
)
```

### LSI depth corr {-}

```{r lsi-depth}
knitr::include_graphics(
  here::here("output/figs/qc/lsi_depthcor.png")
)
```

:::

## Dimension reductions

::: {.panel-tabset}

### UMAP

::: {.panel-tabset}

### Joint {-}

```{r joint-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay.png")
)
```

### RNA-only {-}

```{r rna-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay_rna.png")
)
```

### ATAC-only {-}

```{r atac-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay_atac.png")
)
```

:::

### t-SNE

::: {.panel-tabset}

### Joint {-}

```{r joint-tsne}
knitr::include_graphics(
  here::here("output/figs/cluster/tsne_18_25_overlay.png")
)
```

### RNA-only {-}

```{r rna-tsne}
knitr::include_graphics(
  here::here("output/figs/cluster/tsne_18_25_overlay_rna.png")
)
```

### ATAC-only {-}

```{r atac-tsne}
knitr::include_graphics(
  here::here("output/figs/cluster/tsne_18_25_overlay_atac.png")
)
```

:::

:::

## Clusters

::: {.callout-note}
## A note on clustering resolution

I have clustered the data at several resolutions from under-clustering to over-clustering. The approach that Calderon _et al._ took was to over-cluster, annotate cell-types for each cluster. Then merge back clusters based on matching cell-types. FOr example in the 4-6 hour development window. There were 31 seurat clusters, but only 11 annotated cell-types.

Here, I am presenting three clustering resolutions and their corresponding figures. 
:::

### Clustree

```{r clustree}
knitr::include_graphics(here::here("output/figs/cluster/clustree.png"))
```

::: {.panel-tabset}

### `res = 0.1` {-}

#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_0.1-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_0.1-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_0.1-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/atac_umap_18_25_split.png")
)
```

:::

#### Cells per cluster {-}

```{r res_0.1-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_0.1-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_0.1-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_0.1-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_0.1-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/frip_clust_violin.png")
)
```

#### FRiT

```{r res_0.1-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/frit_clust_violin.png")
)
```

:::


### `res = 0.2` {-}


#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_0.2-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_0.2-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_0.2-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/atac_umap_18_25_split.png")
)
```

:::


#### Cells per cluster {-}

```{r res_0.2-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_0.2-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_0.2-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_0.2-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_0.2-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/frip_clust_violin.png")
)
```

#### FRiT

```{r res_0.2-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/frit_clust_violin.png")
)
```

:::

### `res = 0.4` {-}

#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_0.4-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_0.4-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_0.4-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/atac_umap_18_25_split.png")
)
```

:::


#### Cells per cluster {-}

```{r res_0.4-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_0.4-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_0.4-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_0.4-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_0.4-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/frip_clust_violin.png")
)
```

#### FRiT

```{r res_0.4-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/frit_clust_violin.png")
)
```

:::

### `res = 0.8` {-}

#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_0.8-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_0.8-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_0.8-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/atac_umap_18_25_split.png")
)
```

:::

#### Cells per cluster {-}

```{r res_0.8-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_0.8-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_0.8-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_0.8-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_0.8-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/frip_clust_violin.png")
)
```

#### FRiT

```{r res_0.8-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/frit_clust_violin.png")
)
```

:::

### `res = 1.0` {-}

#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_1-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_1-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_1-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/atac_umap_18_25_split.png")
)
```

:::

#### Cells per cluster {-}

```{r res_1-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_1-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_1-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_1-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_1-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/frip_clust_violin.png")
)
```

#### FRiT

```{r res_1-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/frit_clust_violin.png")
)
```

:::

:::

## Annotation

::: {.callout-note}
## Resolution

I have picked `res = 1.0` for the downstream analysis. 
:::

### Annotation results

```{r annot-res}
readRDS(here::here("data/processed/annot/cluster_annot_all.rds")) |> 
  mutate(cluster = as.numeric(cluster)) |> 
  dplyr::filter(padj < 0.05) |> 
  arrange(cluster, padj) |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "500px")
```

### Manual annotations

```{r annot-man}
readRDS(here::here("data/processed/annot/annot.rds")) |> 
  kable(format = "html", escape = F) |>
  kable_styling("striped") |>
  scroll_box(width = "100%", height = "450px")
```

## Cell-type stats

### Number of genes

```{r}
knitr::include_graphics(
  here::here("output/figs/annot/genes_per_celltype.png")
)
```

### Number of peaks

```{r}
knitr::include_graphics(
  here::here("output/figs/annot/peaks_per_celltype.png")
)
```

# **Differential expression**

## Cell-type

```{r deg-clust}
degs_cluster <- readRDS(here::here("output/degs/degs_clusters.rds")) |> 
  dplyr::filter(p_val_adj < 0.05)
```

::: {.panel-tabset}

### Number of DEGs

```{r n-degs-clust}
knitr::include_graphics(
  here::here("output/figs/degs/degs_count.png")
)
```

### Table of DEGs

```{r tab-degs-clust}
degs_cluster |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```

:::


## Psuedobulk

::: {.panel-tabset}

### DESeq2

```{r pseudo-degseq}
pseudobulk_DESeq <- readRDS(here::here("output/degs/pseudobulk_DESeq.rds")) |> 
  dplyr::filter(padj < 0.05) 

pseudobulk_DESeq |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```

### Seurat

```{r pseudo-seurat}
degs <- readRDS(here::here("output/degs/degs.rds")) |> 
  dplyr::filter(p_val_adj < 0.05) |> 
  rownames_to_column("gene")

degs |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```

### Notes

```{r scatter-degs}
readRDS(here::here("output/degs/degs.rds")) |> 
  rownames_to_column("gene") |> 
  full_join(readRDS(here::here("output/degs/pseudobulk_DESeq.rds")),
            by = "gene") |> 
  dplyr::filter(!is.na(avg_log2FC), !is.na(log2FoldChange)) |> 
  ggplot() +
  geom_hline(yintercept = 0, color = "grey20") +
  geom_vline(xintercept = 0, color = "grey20") +
  geom_abline(slope = 1, 
              intercept = 0,
              linetype = 2,
              color = "grey50") +
  geom_point(aes(x = avg_log2FC,
                 y = log2FoldChange)) +
  labs(x = "Seurat log2FC",
       y = "DESeq2 log2FC") +
  cowplot::theme_minimal_grid()
```

DESeq2 finds **`r nrow(pseudobulk_DESeq)` differentially expressed genes** and Seurat finds **`r nrow(degs)` DEGs** with **`r length(intersect(pseudobulk_DESeq$gene, degs$gene))`** genes overlapping between the two methods. 

List of overlapping genes separated by semicolons: `r paste(intersect(pseudobulk_DESeq$gene, degs$gene), collapse = "; ")`

:::

# **Differential accessibility**

::: {.panel-tabset}

## Number of DARs per Cell-type {-}

```{r, n-dars}
knitr::include_graphics(
  here::here("output/figs/dars/dars_celltype.png")
)
```

## Table of DARs {-}

```{r}
readRDS(here::here("output/dars/dars_cell-type_gene.rds")) |> 
  filter(p_val_adj < 0.05) |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```

:::

## A few examples

::: {.panel-tabset}

### _lola_ {-}

```{r}
roi <- "2R-10486272-10486985.png"

knitr::include_graphics(
  here::here("output/figs/dars/coverage_plots", roi)
)
```

### _Ldh_ {-}

```{r}
roi <- "3L-6262342-6264639.png"

knitr::include_graphics(
  here::here("output/figs/dars/coverage_plots", roi)
)
```

### _DOR_ {-}

```{r}
roi <- "3L-4408296-4410088.png"

knitr::include_graphics(
  here::here("output/figs/dars/coverage_plots", roi)
)
```

### _bowl_ {-}

```{r}
roi <- "2L-3769570-3772221.png"

knitr::include_graphics(
  here::here("output/figs/dars/coverage_plots", roi)
)
```

### _Trim9_ {-}

```{r}
roi <- "2L-10548101-10549342.png"

knitr::include_graphics(
  here::here("output/figs/dars/coverage_plots", roi)
)
```

:::


# **DARs _near_ DEGs**

## Table of DARs near DEGs

::: {.callout-note}
There are seven differentially expressed genes with nearby differentially accessible regions.

_Near_ is defined as a peak within 5,000 bp's of a gene.
:::

```{r}
dars_degs <- readRDS(here::here("output/dars/dars_degs.rds"))

dars_degs |> 
  select(-c("chrom", "start", "end")) |> 
  select(cell_type, region, gene, dist, everything()) |> 
  # rename_with(~str_remove(., '.ATAC')) |> 
  # rename_with(~str_remove(., '.RNA')) |> 
  kable(format = "html", escape = F) |> 
  add_header_above(c(" " = 4, "ATAC" = 6, "RNA" = 6)) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px") 
```

### Scatter of log-fold changes

::: {.callout-tip}
## Matching log-fold changes

Observed directionality of log-fold changes in expression and accessibility match.
:::

```{r}
knitr::include_graphics(
  here::here("output/figs/dars/dars_degs_scatter.png")
)
```

## Accesibility and expression

::: {.panel-tabset}


### _dnt_ {-}

```{r}
goi <- "dnt.png"

knitr::include_graphics(
  here::here("output/figs/dars/cov_exp", goi)
)
```

### _DOR_ {-}

```{r}
goi <- "DOR.png"

knitr::include_graphics(
  here::here("output/figs/dars/cov_exp", goi)
)
```


### _phu_ {-}

```{r}
goi <- "phu.png"

knitr::include_graphics(
  here::here("output/figs/dars/cov_exp", goi)
)
```

### _gukh_ {-}

```{r}
goi <- "gukh.png"

knitr::include_graphics(
  here::here("output/figs/dars/cov_exp", goi)
)
```

### _Act5C_ {-}

```{r}
goi <- "Act5C.png"

knitr::include_graphics(
  here::here("output/figs/dars/cov_exp", goi)
)
```

### _CG43759_ {-}

```{r}
goi <- "CG43759.png"

knitr::include_graphics(
  here::here("output/figs/dars/cov_exp", goi)
)
```

### _out_ {-}

```{r}
goi <- "out.png"

knitr::include_graphics(
  here::here("output/figs/dars/cov_exp", goi)
)
```

:::



# Session Info {-}

```{r session-info}
#| echo: false
#| eval: true
sessionInfo()
```