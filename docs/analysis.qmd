---
title: "How embryos acclimate to temperature through epigenetic regulation"
authors: 
  - "Thomas O’Leary, Emily Mikucki, Sumaetee Tangwancharoen, Sara Helms Cahan, Seth Frietze, Brent L. Lockwood"
format:
  html:
    theme: lumen
    fontsize: 95%
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
---

<<<<<<< HEAD
```{r setup, include = FALSE}
=======
```{r, include = FALSE}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
library(shiny)
```

<<<<<<< HEAD
::: {.callout-note collapse="true"}
## To do list

#### Major {-}

- Quality control: Should we be more aggressive removing multiplets? – see full question in multiplet section below.
- Calculate differentially accessible regions per cluster and maybe also a pseudobulk approach as well. 

#### Minor {-}

- Shiny app minimal implementation
- Knitr cache setup on this document
:::


=======
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
# **Code** {-}

::: {.panel-tabset}

## Phenotype

<<<<<<< HEAD
```{r pheno, filename = "cs_pheno.R"}
#| cache: true
=======
```{r, filename = "cs_pheno.R"}
#| eval: false
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| echo: true
#| code-fold: true
#| file: "../src/00_pheno/cs_pheno.R"
```

## Cell Ranger ARC

<<<<<<< HEAD
```{r mkref, filename = "00_mkref.sh"}
=======
```{r, filename = "00_mkref.sh"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/00_mkref.sh"
```

<<<<<<< HEAD
```{r count, filename = "01_count.sh"}
=======
```{r, filename = "01_count.sh"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/01_count.sh"
```

<<<<<<< HEAD
```{r aggr, filename = "02_aggr.sh"}
=======
```{r, filename = "02_aggr.sh"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/02_aggr.sh"
```

## Seurat

<<<<<<< HEAD
```{r create, filename = "00_create_seurat_object.R"}
#| cache: true
=======
```{r, filename = "00_create_seurat_object.R"}
#| eval: false
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/00_create_seurat_object.R"
```

<<<<<<< HEAD
```{r qc-filt, filename = "01_quality_control_filtering.R"}
#| dependson: create
#| cache: true
=======
```{r, filename = "01_quality_control_filtering.R"}
#| eval: false
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/01_quality_control_filtering.R"
```

<<<<<<< HEAD
```{r init-clust, filename = "02_initial_cluster.R"}
#| dependson: qc-filt
#| cache: true
=======
```{r, filename = "02_initial_cluster.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/02_initial_cluster.R"
```

<<<<<<< HEAD
```{r amulet, filename = "03_amulet.R"}
#| dependson: create
#| cache: true
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/03_amulet.R"
```

```{r doublet-finder, filename = "04_doublet_finder.R"}
#| dependson: init-clust
=======
```{r, filename = "04_doublet_finder.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/04_doublet_finder.R"
```

<<<<<<< HEAD
```{r rm-mult, filename = "05_rm_multiplets.R"}
=======
```{r, filename = "05_rm_multiplets.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/05_rm_multiplets.R"
```

<<<<<<< HEAD
```{r qc-cells, filename = "06_qc_data_cells.R"}
=======
```{r, filename = "06_qc_data_cells.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/06_qc_data_cells.R"
```

<<<<<<< HEAD
```{r clust, filename = "07_cluster.R"}
=======
```{r, filename = "07_cluster.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/07_cluster.R"
```

<<<<<<< HEAD
```{r markers, filename = "08_cluster_markers.R"}
=======
```{r, filename = "08_cluster_markers.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/08_cluster_markers.R"
```

<<<<<<< HEAD
```{r annot, filename = "09_cluster_annotation.R"}
=======
```{r, filename = "09_cluster_annotation.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/09_cluster_annotation.R"
```

<<<<<<< HEAD
```{r link, filename = "10_link_peaks.R"}
=======
```{r, filename = "10_link_peaks.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/10_link_peaks.R"
```

<<<<<<< HEAD
```{r pseudo, filename = "11_pseudobulk_DESeq2.R"}
=======
```{r, filename = "11_pseudobulk_DESeq2.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/11_pseudobulk_DESeq2.R"
```

## Figures

<<<<<<< HEAD
```{r fig-pheno, filename = "pheno.R"}
#| dependson: pheno
=======
```{r, filename = "pheno.R"}
#| eval: false
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/pheno.R"
```

<<<<<<< HEAD
```{r fig-qc, filename = "qc.R"}
=======
```{r, filename = "qc.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/qc.R"
```

<<<<<<< HEAD
```{r fig-qc_cells, filename = "qc_cells.R"}
=======
```{r, filename = "qc_cells.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/qc_cells.R"
```

<<<<<<< HEAD
```{r fig-mult, filename = "multiplets.R"}
=======
```{r, filename = "multiplets.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/multiplets.R"
```

<<<<<<< HEAD
```{r fig-clust, filename = "cluster.R"}
=======
```{r, filename = "cluster.R"}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/cluster.R"
```

<<<<<<< HEAD
=======


>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
:::

::: {.callout-note}
The code used for analysis is located [on GitHub](https://github.com/tsoleary/heater)
:::


<<<<<<< HEAD
# **Overview**

## Experimental design

```{r acc-exp-design}
knitr::include_graphics(
  here::here("output/figs/exp/acc_design.png")
)
```

```{r hs-exp-design}
knitr::include_graphics(
  here::here("output/figs/exp/heatshock_design.png")
)
```

## Phenotype

```{r pheno-fig}
knitr::include_graphics(
  here::here("output/figs/pheno/cantonS_survival.png")
)
```

=======
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
# **Quality control**

::: {.callout-caution collapse=true, icon=false}
## Criteria for filtering all barcodes to high-quality nuclei

1. We used Cell Ranger ARC called cell barcodes -- algorithm described [here](https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/pipelines/latest/algorithms/cell-calling). 14,301 barcodes out of 2,215,183. 

2. Because the Cell Ranger ARC cell calling algorithm is very permissive to barcodes with very low counts (_i.e._, a minimum of a single count in each library), barcodes were additionally filtered to a low count threshold in both the ATAC and RNA libraries based on the clearly defined population of cells in the RNA and ATAC count scatterplot. Additionally, barcodes with more than 5% of RNA reads mapping to genes on the mitochondrial genome were excluded. A total of 886 barcodes were filtered out for 13,145 left. 

3. Multiplets were filtered out using two independent methods, relying on either the ATAC or RNA libraries to call multiplets. [AMULET](https://github.com/UcarLab/AMULET) relies on the assumption that in snATAC-seq of diploids there should be at most two overlapping fragments with the same cell barcode. The presence of more than two overlapping fragments is a potential indication of a multiplet. Doublets were also identified using the RNA-seq libraries with [DoubletFinder](https://github.com/chris-mcginnis-ucsf/DoubletFinder). After removing the 1,103 multiplet barcodes, there were still two barcodes that had substantially higher number of RNA reads after all filtering (i.e., n_Count_RNA around 12-13k when the next highest are around 6-7k). So I removed those two for a final number of 12,040 high quality nuceli barcodes.
:::


## Knee plot

<<<<<<< HEAD
```{r knee}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| label: fig-plot
#| fig-cap: "Knee plot of the number of ATAC reads and RNA reads in the raw data."

knitr::include_graphics(here::here("output/figs/qc/knee_plots.png"))
```

## Scatter plot of counts

::: {.panel-tabset}

### Cells after all filtering

<<<<<<< HEAD
```{r fig-all-scatter}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_final_filter.png")
)
```

### Cell Ranger ARC only

<<<<<<< HEAD
```{r fig-10x-scatter}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_10x_cells.png")
)
```

### And low count threshold

<<<<<<< HEAD
```{r fig-low-scatter}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_cells_threshold.png")
)
```

:::

## Violin QC plots

::: {.panel-tabset}

### After filtering

<<<<<<< HEAD
```{r qc-violin-post}
knitr::include_graphics(
  here::here("output/figs/qc/violin_qc_metrics_post_filter.png")
)
=======
```{r}
knitr::include_graphics(here::here("output/figs/qc/violin_qc_metrics_post_filter.png"))
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
```

### Before filtering

<<<<<<< HEAD
```{r qc-violin-pre}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/violin_qc_metrics.png"))
```

:::

## Multiplets

<<<<<<< HEAD
::: {.callout-warning collapse="true"}
## A question about detecting multiplets

After intial multiplet calling, some researchers seem to subcluster cells and then remove entire subclusters that have higher than a certain threshold of called doublets – even if the many of the individual barcodes themselves weren't called a multiplet in the initial multiplet classification. For example, the Calderon paper did the following:

> Unfortunately, this process alone did not remove all putative doublets that may have  been lost among different clusters of cells. Therefore, following clustering of the global dataset,  we individually processed each cluster identified and sub-clustered the data. We then eliminated  subclusters that were at least 15% classified as doublets. Following removal of all the initial nuclei  identified  as  doublets  and  subclusters  with  a  large  proportion  of  doublets,  we  reprocessed  the  global dataset.

Is this an approach we should consider with our data?
:::

=======
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
::: {.panel-tabset}

### Mapped onto UMAP projection

<<<<<<< HEAD
```{r mult-umap}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/multiplet_umap.png"))
```

### Counts

<<<<<<< HEAD
```{r counts-umap}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/counts_umap.png"))
```

:::

### Count histograms {-}

::: {.panel-tabset}

#### Multiplets

<<<<<<< HEAD
```{r mult-hist}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/multiplets_hist.png"))
```

#### After filtering

<<<<<<< HEAD
```{r sing-hist}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/singlets_only_hist.png"))
```
:::

## QC metrics per sample

::: {.panel-tabset}

### Number of cells

<<<<<<< HEAD
```{r cells-samp}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/cells_sample.png"))
```

### ATAC counts

<<<<<<< HEAD
```{r med-atac-samp}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/median_atac_sample.png"))
```

### RNA counts

<<<<<<< HEAD
```{r med-rna-samp}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/median_rna_sample.png"))
```

### TSS Enrichment

<<<<<<< HEAD
```{r med-tss-samp}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/tss_enrichment_samples.png"))
```

### FRiP

<<<<<<< HEAD
```{r med-frip-samp}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/frip_samples.png"))
```


### FRiT

<<<<<<< HEAD
```{r med-frit-samp}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/qc/frit_samples.png"))
```

:::

## QC metrics on UMAP

::: {.panel-tabset}

### ATAC counts

<<<<<<< HEAD
```{r umap-atac-count}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/features/qc/nCount_ATAC.png"))
```

### RNA counts

<<<<<<< HEAD
```{r umap-rna-count}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/features/qc/nCount_RNA.png"))
```

### TSS enrichment

<<<<<<< HEAD
```{r umap-tss}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/features/qc/TSS.enrichment.png"))
```

### Mito percent

<<<<<<< HEAD
```{r umap-mito}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/features/qc/percent.mt.png"))
```

### FRiP

<<<<<<< HEAD
```{r umap-frip}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/features/qc/FRiP.png"))
```

### FRiT

<<<<<<< HEAD
```{r umap-frit}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
knitr::include_graphics(here::here("output/figs/features/qc/FRiT.png"))
```

:::


# **Seurat**

<<<<<<< HEAD
::: {.panel-tabset}

## Initial data processing

```{r clust-code, echo = c(13:25, 46:51, 66:96)}
#| eval: false
#| file: "../src/03_seurat/07_cluster.R"
```

## Notes

::: {.callout-note}
## Number of included dimensions

I kept the first 50 PCs. The elbow plot does not seem to entirely tail off before 50 PCs and the SCTransform method is a more robust normalization method that is less likely to carry artifacts do to technical variation. Please see [here](https://satijalab.org/seurat/archive/v3.0/sctransform_vignette.html) and [here](https://www.biostars.org/p/423306/).

The first LSI component is removed from downstream analysis because it is highly correlated with ATAC library depth. See below
:::

### PC elbow plot {-}

```{r elbow}
knitr::include_graphics(
  here::here("output/figs/qc/elbow_plot.png")
)
```

### LSI depth corr {-}

```{r lsi-depth}
knitr::include_graphics(
  here::here("output/figs/qc/lsi_depthcor.png")
)
```

:::

## Dimension reductions

::: {.panel-tabset}

### UMAP

::: {.panel-tabset}

### Joint {-}

```{r joint-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay.png")
)
```

### RNA-only {-}

```{r rna-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay_rna.png")
)
```

### ATAC-only {-}

```{r atac-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay_atac.png")
)
```

:::

### t-SNE

::: {.panel-tabset}

### Joint {-}

```{r joint-tsne}
knitr::include_graphics(
  here::here("output/figs/cluster/tsne_18_25_overlay.png")
)
```

### RNA-only {-}

```{r rna-tsne}
knitr::include_graphics(
  here::here("output/figs/cluster/tsne_18_25_overlay_rna.png")
)
```

### ATAC-only {-}

```{r atac-tsne}
knitr::include_graphics(
  here::here("output/figs/cluster/tsne_18_25_overlay_atac.png")
)
```

:::

:::

## Clusters

::: {.callout-note}
## A note on clustering resolution

I have clustered the data at several resolutions from under-clustering to over-clustering. The approach that Calderon _et al._ took was to over-cluster, annotate cell-types for each cluster. Then merge back clusters based on matching cell-types. FOr example in the 4-6 hour development window. There were 31 seurat clusters, but only 11 annotated cell-types.

Here, I am presenting three clustering resolutions and their corresponding figures. 
:::

### Clustree

```{r clustree}
knitr::include_graphics(here::here("output/figs/cluster/clustree.png"))
```

::: {.panel-tabset}

### `res = 0.1` {-}

#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_0.1-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_0.1-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_0.1-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/atac_umap_18_25_split.png")
)
```

:::

#### Cells per cluster {-}

```{r res_0.1-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_0.1-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_0.1-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_0.1-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_0.1-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/frip_clust_violin.png")
)
```

#### FRiT

```{r res_0.1-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.1/frit_clust_violin.png")
)
```

:::


### `res = 0.2` {-}


#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_0.2-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_0.2-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_0.2-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/atac_umap_18_25_split.png")
)
```

:::


#### Cells per cluster {-}

```{r res_0.2-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_0.2-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_0.2-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_0.2-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_0.2-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/frip_clust_violin.png")
)
```

#### FRiT

```{r res_0.2-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.2/frit_clust_violin.png")
)
```

:::

### `res = 0.4` {-}

#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_0.4-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_0.4-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_0.4-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/atac_umap_18_25_split.png")
)
```

:::


#### Cells per cluster {-}

```{r res_0.4-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_0.4-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_0.4-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_0.4-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_0.4-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/frip_clust_violin.png")
)
```

#### FRiT

```{r res_0.4-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.4/frit_clust_violin.png")
)
```

:::

### `res = 0.8` {-}

#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_0.8-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_0.8-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_0.8-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/atac_umap_18_25_split.png")
)
```

:::

#### Cells per cluster {-}

```{r res_0.8-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_0.8-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_0.8-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_0.8-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_0.8-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/frip_clust_violin.png")
)
```

#### FRiT

```{r res_0.8-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_0.8/frit_clust_violin.png")
=======
## Clusters

### Cells per cluster {-}

```{r}
knitr::include_graphics(here::here("output/figs/cluster/cells_per_cluster.png"))
```

### Acclimation clusters

::: {.panel-tabset}

#### Joint UMAP  {- .tabset .tabset-pills}

::: {.panel-tabset}

##### Split {-}

```{r}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_split.png")
)
```

##### Together {-}

```{r, out.width = "75%"}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay.png")
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
)
```

:::

<<<<<<< HEAD
### `res = 1.0` {-}

#### Acclimation clusters {-}

::: {.panel-tabset}

##### Joint {-}

```{r res_1-umap}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/umap_18_25_split.png")
)
```

##### RNA-only {-}

```{r res_1-umap_rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/rna_umap_18_25_split.png")
)
```

##### ATAC-only {-}

```{r res_1-umap_atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/atac_umap_18_25_split.png")
=======
#### RNA-only UMAP {- .tabset .tabset-pills}

::: {.panel-tabset}

##### Split {-}

```{r}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_split_rna.png")
)
```

##### Together {-}

```{r, out.width = "75%"}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay_rna.png")
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
)
```

:::

<<<<<<< HEAD
#### Cells per cluster {-}

```{r res_1-n-cells-clust}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/cells_per_cluster.png")
)
```


#### CLuster specific quality control {-}

::: {.panel-tabset}

#### RNA count

```{r res_1-rna}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/rna_clust_violin.png")
)
```

#### ATAC count

```{r res_1-atac}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/atac_clust_violin.png")
)
```

#### Mito percent

```{r res_1-percent.mt}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/percent.mt_clust_violin.png")
)
```

#### FRiP

```{r res_1-frip}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/frip_clust_violin.png")
)
```

#### FRiT

```{r res_1-frit}
knitr::include_graphics(
  here::here("output/figs/cluster/res_1/frit_clust_violin.png")
=======
#### ATAC-only UMAP {- .tabset .tabset-pills}

::: {.panel-tabset}

##### Split {-}

```{r}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_split_atac.png")
)
```

##### Together {-}

```{r, out.width = "75%"}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay_atac.png")
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
)
```

:::

:::

## Annotation

<<<<<<< HEAD
::: {.callout-note}
## Resolution

I have picked `res = 1.0` for the downstream analysis. 
:::

### Annotation results

```{r annot-res}
=======
### Annotation results

```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
readRDS(here::here("data/processed/annot/cluster_annot_all.rds")) |> 
  mutate(cluster = as.numeric(cluster)) |> 
  filter(padj < 0.05) |> 
  arrange(cluster, padj) |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "500px")
```

### Manual annotations

<<<<<<< HEAD
```{r annot-man}
readRDS(here::here("data/processed/annot/annot.rds")) |> 
  kable(format = "html", escape = F) |>
  kable_styling("striped") |>
=======
```{r}
readRDS(here::here("data/processed/annot/cluster_annot_manual.rds")) |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
  scroll_box(width = "100%", height = "450px")
```


<<<<<<< HEAD
# **Differential expression**

## Cell-type

```{r deg-clust}
=======
::: {.callout-warning}
Cluster 11 is likely also unknown or ubiquitous, as it does not have an annotation that passes FDR.
:::


# **Differential expression**

## Cluster

```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
degs_cluster <- readRDS(here::here("output/degs/degs_clusters.rds")) |> 
  filter(p_val_adj < 0.05)
```

::: {.panel-tabset}

### Number of DEGs

<<<<<<< HEAD
```{r n-degs-clust}
degs_cluster |> 
  group_by(cluster) |> 
  tally() |> 
  mutate(cluster = fct_reorder(cluster, n, .fun = "identity")) |> 
=======
```{r}
degs_cluster |> 
  mutate(cluster = fct_relevel(cluster, as.character(11:1))) |> 
  group_by(cluster) |> 
  tally() |> 
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
  ggplot() +
  geom_col(aes(x = n,
               y = cluster),
           na.rm = TRUE,
           color = "grey20",
           fill = "grey80") +
<<<<<<< HEAD
  labs(y = "") +
  scale_x_continuous(position = "top",
                     name = "Number of differentially expressed genes",
                     expand = c(0, 0)) +
  cowplot::theme_cowplot()

# ggsave(here::here("output/figs/degs/degs_count.pdf"),
#        height = 15,
#        width = 30,
#        units = "cm")
# ggsave(here::here("output/figs/degs/degs_count.png"),
#        height = 15,
#        width = 30,
#        units = "cm")
```


<!-- ```{r n-degs-vio} -->
<!-- # degs_cluster |>  -->
<!-- #   ggplot(aes(label = gene)) + -->
<!-- #   geom_hline(yintercept = -log10(0.05), -->
<!-- #              color = "grey50", -->
<!-- #              linetype = 2) + -->
<!-- #   geom_point(aes(y = -log10(padj), -->
<!-- #                  x = avg_log2FC_18_25, -->
<!-- #                  fill = padj < 0.05, -->
<!-- #                  size = padj < 0.05), -->
<!-- #              color = "grey90", -->
<!-- #              stroke = 0.2, -->
<!-- #              shape = 21) + -->
<!-- #   scale_size_manual(values = c(1, 2)) + -->
<!-- #   scale_fill_manual(values = c("grey80", "firebrick")) + -->
<!-- #   cowplot::theme_cowplot() + -->
<!-- #   theme(legend.position = "none") + -->
<!-- #   facet_wrap(~cluster) -->

<!-- # ggsave(here::here("output/figs/degs/celltype_volcano.pdf"), -->
<!-- #        height = 30, -->
<!-- #        width = 30, -->
<!-- #        units = "cm") -->
<!-- # ggsave(here::here("output/figs/degs/celltype_volcano.png"), -->
<!-- #        height = 30, -->
<!-- #        width = 30, -->
<!-- #        units = "cm") -->
<!-- ``` -->



### Table of DEGs

```{r tab-degs-clust}
=======
  
  scale_x_continuous(position = "top",
                     name = "Number of differentially expressed genes",
                     expand = c(0, 0.5)) +
  cowplot::theme_cowplot()
```

### Table of DEGs

```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
degs_cluster |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```

:::


## Psuedobulk

::: {.panel-tabset}

### DESeq2

<<<<<<< HEAD
```{r pseudo-degseq}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
pseudobulk_DESeq <- readRDS(here::here("output/degs/pseudobulk_DESeq.rds")) |> 
  filter(padj < 0.05) 

pseudobulk_DESeq |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
<<<<<<< HEAD
=======

>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
```

### Seurat

<<<<<<< HEAD
```{r pseudo-seurat}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
degs <- readRDS(here::here("output/degs/degs.rds")) |> 
  filter(p_val_adj < 0.05) |> 
  rownames_to_column("gene")

degs |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```

<<<<<<< HEAD
### Notes

```{r scatter-degs}
readRDS(here::here("output/degs/degs.rds")) |> 
  rownames_to_column("gene") |> 
  full_join(readRDS(here::here("output/degs/pseudobulk_DESeq.rds")),
            by = "gene") |> 
  filter(!is.na(avg_log2FC), !is.na(log2FoldChange)) |> 
  ggplot() +
  geom_hline(yintercept = 0, color = "grey20") +
  geom_vline(xintercept = 0, color = "grey20") +
  geom_abline(slope = 1, 
              intercept = 0,
              linetype = 2,
              color = "grey50") +
  geom_point(aes(x = avg_log2FC,
                 y = log2FoldChange)) +
  labs(x = "Seurat log2FC",
       y = "DESeq2 log2FC") +
  cowplot::theme_minimal_grid()
```

DESeq2 finds **`r nrow(pseudobulk_DESeq)` differentially expressed genes** and Seurat finds **`r nrow(degs)` DEGs** with **`r length(intersect(pseudobulk_DESeq$gene, degs$gene))`** genes overlapping between the two methods. 

List of overlapping genes separated by semicolons: `r paste(intersect(pseudobulk_DESeq$gene, degs$gene), collapse = "; ")`
=======
### Stats


DESeq2 finds `r nrow(pseudobulk_DESeq)` differentially expressed genes and Seurat finds `r nrow(degs)` DEGs with `r length(intersect(pseudobulk_DESeq$gene, degs$gene))` genes overlapping between the two methods. 

List of overlapping genes separated by a semicolon:  `r paste(intersect(pseudobulk_DESeq$gene, degs$gene), collapse = "; ")`
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21

:::

# Session Info {-}

<<<<<<< HEAD
```{r session-info}
=======
```{r}
>>>>>>> a8de26aef8a500cdbd82fa277045d3e778c75e21
#| echo: false
#| eval: true
sessionInfo()
```