---
title: "How embryos acclimate to temperature through epigenetic regulation"
authors: 
  - "Thomas Oâ€™Leary, Emily Mikucki, Sumaetee Tangwancharoen, Sara Helms Cahan, Seth Frietze, Brent L. Lockwood"
format:
  html:
    theme: lumen
    fontsize: 95%
    toc: true
    toc-location: left
    number-sections: true
    self-contained: true
---

```{r, include = FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(kableExtra)
library(shiny)
```

# **Code** {-}

::: {.panel-tabset}

## Phenotype

```{r, filename = "cs_pheno.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/00_pheno/cs_pheno.R"
```

## Cell Ranger ARC

```{r, filename = "00_mkref.sh"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/00_mkref.sh"
```

```{r, filename = "01_count.sh"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/01_count.sh"
```

```{r, filename = "02_aggr.sh"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/02_cellranger-arc/02_aggr.sh"
```

## Seurat

```{r, filename = "00_create_seurat_object.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/00_create_seurat_object.R"
```

```{r, filename = "01_quality_control_filtering.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/01_quality_control_filtering.R"
```

```{r, filename = "02_initial_cluster.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/02_initial_cluster.R"
```

```{r, filename = "04_doublet_finder.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/04_doublet_finder.R"
```

```{r, filename = "05_rm_multiplets.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/05_rm_multiplets.R"
```

```{r, filename = "06_qc_data_cells.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/06_qc_data_cells.R"
```

```{r, filename = "07_cluster.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/07_cluster.R"
```

```{r, filename = "08_cluster_markers.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/08_cluster_markers.R"
```

```{r, filename = "09_cluster_annotation.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/09_cluster_annotation.R"
```

```{r, filename = "10_link_peaks.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/10_link_peaks.R"
```

```{r, filename = "11_pseudobulk_DESeq2.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/03_seurat/11_pseudobulk_DESeq2.R"
```

## Figures

```{r, filename = "pheno.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/pheno.R"
```

```{r, filename = "qc.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/qc.R"
```

```{r, filename = "qc_cells.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/qc_cells.R"
```

```{r, filename = "multiplets.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/multiplets.R"
```

```{r, filename = "cluster.R"}
#| eval: false
#| echo: true
#| code-fold: true
#| file: "../src/04_plots/cluster.R"
```



:::

::: {.callout-note}
The code used for analysis is located [on GitHub](https://github.com/tsoleary/heater)
:::


# **Quality control**

::: {.callout-caution collapse=true, icon=false}
## Criteria for filtering all barcodes to high-quality nuclei

1. We used Cell Ranger ARC called cell barcodes -- algorithm described [here](https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/pipelines/latest/algorithms/cell-calling). 14,301 barcodes out of 2,215,183. 

2. Because the Cell Ranger ARC cell calling algorithm is very permissive to barcodes with very low counts (_i.e._, a minimum of a single count in each library), barcodes were additionally filtered to a low count threshold in both the ATAC and RNA libraries based on the clearly defined population of cells in the RNA and ATAC count scatterplot. Additionally, barcodes with more than 5% of RNA reads mapping to genes on the mitochondrial genome were excluded. A total of 886 barcodes were filtered out for 13,145 left. 

3. Multiplets were filtered out using two independent methods, relying on either the ATAC or RNA libraries to call multiplets. [AMULET](https://github.com/UcarLab/AMULET) relies on the assumption that in snATAC-seq of diploids there should be at most two overlapping fragments with the same cell barcode. The presence of more than two overlapping fragments is a potential indication of a multiplet. Doublets were also identified using the RNA-seq libraries with [DoubletFinder](https://github.com/chris-mcginnis-ucsf/DoubletFinder). After removing the 1,103 multiplet barcodes, there were still two barcodes that had substantially higher number of RNA reads after all filtering (i.e., n_Count_RNA around 12-13k when the next highest are around 6-7k). So I removed those two for a final number of 12,040 high quality nuceli barcodes.
:::


## Knee plot

```{r}
#| label: fig-plot
#| fig-cap: "Knee plot of the number of ATAC reads and RNA reads in the raw data."

knitr::include_graphics(here::here("output/figs/qc/knee_plots.png"))
```

## Scatter plot of counts

::: {.panel-tabset}

### Cells after all filtering

```{r}
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_final_filter.png")
)
```

### Cell Ranger ARC only

```{r}
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_10x_cells.png")
)
```

### And low count threshold

```{r}
knitr::include_graphics(
  here::here("output/figs/qc/scatter_rna_atac_cells_threshold.png")
)
```

:::

## Violin QC plots

::: {.panel-tabset}

### After filtering

```{r}
knitr::include_graphics(here::here("output/figs/qc/violin_qc_metrics_post_filter.png"))
```

### Before filtering

```{r}
knitr::include_graphics(here::here("output/figs/qc/violin_qc_metrics.png"))
```

:::

## Multiplets

::: {.panel-tabset}

### Mapped onto UMAP projection

```{r}
knitr::include_graphics(here::here("output/figs/qc/multiplet_umap.png"))
```

### Counts

```{r}
knitr::include_graphics(here::here("output/figs/qc/counts_umap.png"))
```

:::

### Count histograms {-}

::: {.panel-tabset}

#### Multiplets

```{r}
knitr::include_graphics(here::here("output/figs/qc/multiplets_hist.png"))
```

#### After filtering

```{r}
knitr::include_graphics(here::here("output/figs/qc/singlets_only_hist.png"))
```
:::

## QC metrics per sample

::: {.panel-tabset}

### Number of cells

```{r}
knitr::include_graphics(here::here("output/figs/qc/cells_sample.png"))
```

### ATAC counts

```{r}
knitr::include_graphics(here::here("output/figs/qc/median_atac_sample.png"))
```

### RNA counts

```{r}
knitr::include_graphics(here::here("output/figs/qc/median_rna_sample.png"))
```

### TSS Enrichment

```{r}
knitr::include_graphics(here::here("output/figs/qc/tss_enrichment_samples.png"))
```

### FRiP

```{r}
knitr::include_graphics(here::here("output/figs/qc/frip_samples.png"))
```


### FRiT

```{r}
knitr::include_graphics(here::here("output/figs/qc/frit_samples.png"))
```

:::

## QC metrics on UMAP

::: {.panel-tabset}

### ATAC counts

```{r}
knitr::include_graphics(here::here("output/figs/features/qc/nCount_ATAC.png"))
```

### RNA counts

```{r}
knitr::include_graphics(here::here("output/figs/features/qc/nCount_RNA.png"))
```

### TSS enrichment

```{r}
knitr::include_graphics(here::here("output/figs/features/qc/TSS.enrichment.png"))
```

### Mito percent

```{r}
knitr::include_graphics(here::here("output/figs/features/qc/percent.mt.png"))
```

### FRiP

```{r}
knitr::include_graphics(here::here("output/figs/features/qc/FRiP.png"))
```

### FRiT

```{r}
knitr::include_graphics(here::here("output/figs/features/qc/FRiT.png"))
```

:::


# **Seurat**

## Clusters

### Cells per cluster {-}

```{r}
knitr::include_graphics(here::here("output/figs/cluster/cells_per_cluster.png"))
```

### Acclimation clusters

::: {.panel-tabset}

#### Joint UMAP  {- .tabset .tabset-pills}

::: {.panel-tabset}

##### Split {-}

```{r}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_split.png")
)
```

##### Together {-}

```{r, out.width = "75%"}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay.png")
)
```

:::

#### RNA-only UMAP {- .tabset .tabset-pills}

::: {.panel-tabset}

##### Split {-}

```{r}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_split_rna.png")
)
```

##### Together {-}

```{r, out.width = "75%"}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay_rna.png")
)
```

:::

#### ATAC-only UMAP {- .tabset .tabset-pills}

::: {.panel-tabset}

##### Split {-}

```{r}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_split_atac.png")
)
```

##### Together {-}

```{r, out.width = "75%"}
knitr::include_graphics(
  here::here("output/figs/cluster/umap_18_25_overlay_atac.png")
)
```

:::

:::

## Annotation

### Annotation results

```{r}
readRDS(here::here("data/processed/annot/cluster_annot_all.rds")) |> 
  mutate(cluster = as.numeric(cluster)) |> 
  filter(padj < 0.05) |> 
  arrange(cluster, padj) |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "500px")
```

### Manual annotations

```{r}
readRDS(here::here("data/processed/annot/cluster_annot_manual.rds")) |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```


::: {.callout-warning}
Cluster 11 is likely also unknown or ubiquitous, as it does not have an annotation that passes FDR.
:::


# **Differential expression**

## Cluster

```{r}
degs_cluster <- readRDS(here::here("output/degs/degs_clusters.rds")) |> 
  filter(p_val_adj < 0.05)
```

::: {.panel-tabset}

### Number of DEGs

```{r}
degs_cluster |> 
  mutate(cluster = fct_relevel(cluster, as.character(11:1))) |> 
  group_by(cluster) |> 
  tally() |> 
  ggplot() +
  geom_col(aes(x = n,
               y = cluster),
           na.rm = TRUE,
           color = "grey20",
           fill = "grey80") +
  
  scale_x_continuous(position = "top",
                     name = "Number of differentially expressed genes",
                     expand = c(0, 0.5)) +
  cowplot::theme_cowplot()
```

### Table of DEGs

```{r}
degs_cluster |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```

:::


## Psuedobulk

::: {.panel-tabset}

### DESeq2

```{r}
pseudobulk_DESeq <- readRDS(here::here("output/degs/pseudobulk_DESeq.rds")) |> 
  filter(padj < 0.05) 

pseudobulk_DESeq |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")

```

### Seurat

```{r}
degs <- readRDS(here::here("output/degs/degs.rds")) |> 
  filter(p_val_adj < 0.05) |> 
  rownames_to_column("gene")

degs |> 
  kable(format = "html", escape = F) |> 
  kable_styling("striped") |> 
  scroll_box(width = "100%", height = "450px")
```

### Stats


DESeq2 finds `r nrow(pseudobulk_DESeq)` differentially expressed genes and Seurat finds `r nrow(degs)` DEGs with `r length(intersect(pseudobulk_DESeq$gene, degs$gene))` genes overlapping between the two methods. 

List of overlapping genes separated by a semicolon:  `r paste(intersect(pseudobulk_DESeq$gene, degs$gene), collapse = "; ")`

:::

# Session Info {-}

```{r}
#| echo: false
#| eval: true
sessionInfo()
```